--
-- PostgreSQL database dump
--

-- Dumped from database version 10.5
-- Dumped by pg_dump version 10.5

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


--
-- Name: adressemail; Type: DOMAIN; Schema: public; Owner: postgres
--

CREATE DOMAIN public.adressemail AS character varying(50)
	CONSTRAINT adressemail_check CHECK (((VALUE)::text ~ '^([\w]+\.)*([\w]+)@([\w]+)(\.(com|fr|gf|pf))$'::text));


ALTER DOMAIN public.adressemail OWNER TO postgres;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: administrateurs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.administrateurs (
    id_admin integer NOT NULL,
    id_utilisateur integer NOT NULL
);


ALTER TABLE public.administrateurs OWNER TO postgres;

--
-- Name: administrateurs_id_admin_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.administrateurs_id_admin_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.administrateurs_id_admin_seq OWNER TO postgres;

--
-- Name: administrateurs_id_admin_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.administrateurs_id_admin_seq OWNED BY public.administrateurs.id_admin;


--
-- Name: artistes; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.artistes (
    id_artiste integer NOT NULL,
    image character varying(60),
    nom character varying(30),
    genre character varying(30)
);


ALTER TABLE public.artistes OWNER TO postgres;

--
-- Name: artistes_id_artiste_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.artistes_id_artiste_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.artistes_id_artiste_seq OWNER TO postgres;

--
-- Name: artistes_id_artiste_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.artistes_id_artiste_seq OWNED BY public.artistes.id_artiste;


--
-- Name: concerts; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.concerts (
    id_concert integer NOT NULL,
    date_evenement date NOT NULL,
    lieu character varying(50) NOT NULL,
    place integer NOT NULL,
    place_libre integer DEFAULT 0,
    prix numeric(5,2) DEFAULT 100 NOT NULL,
    description text,
    CONSTRAINT concerts_check CHECK ((place_libre <= place))
);


ALTER TABLE public.concerts OWNER TO postgres;

--
-- Name: concerts_id_concert_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.concerts_id_concert_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.concerts_id_concert_seq OWNER TO postgres;

--
-- Name: concerts_id_concert_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.concerts_id_concert_seq OWNED BY public.concerts.id_concert;


--
-- Name: ensemble_groupe; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ensemble_groupe (
    id_concert integer NOT NULL,
    id_artiste integer NOT NULL
);


ALTER TABLE public.ensemble_groupe OWNER TO postgres;

--
-- Name: utilisateurs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.utilisateurs (
    id_utilisateur integer NOT NULL,
    nom character varying(30) NOT NULL,
    prenom character varying(30) NOT NULL,
    mail public.adressemail,
    mdp character(40) DEFAULT 100 NOT NULL
);


ALTER TABLE public.utilisateurs OWNER TO postgres;

--
-- Name: utilisateurs_id_utilisateur_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.utilisateurs_id_utilisateur_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.utilisateurs_id_utilisateur_seq OWNER TO postgres;

--
-- Name: utilisateurs_id_utilisateur_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.utilisateurs_id_utilisateur_seq OWNED BY public.utilisateurs.id_utilisateur;


--
-- Name: administrateurs id_admin; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.administrateurs ALTER COLUMN id_admin SET DEFAULT nextval('public.administrateurs_id_admin_seq'::regclass);


--
-- Name: artistes id_artiste; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.artistes ALTER COLUMN id_artiste SET DEFAULT nextval('public.artistes_id_artiste_seq'::regclass);


--
-- Name: concerts id_concert; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.concerts ALTER COLUMN id_concert SET DEFAULT nextval('public.concerts_id_concert_seq'::regclass);


--
-- Name: utilisateurs id_utilisateur; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.utilisateurs ALTER COLUMN id_utilisateur SET DEFAULT nextval('public.utilisateurs_id_utilisateur_seq'::regclass);


--
-- Data for Name: administrateurs; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.administrateurs (id_admin, id_utilisateur) FROM stdin;
1	1
2	3
\.


--
-- Data for Name: artistes; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.artistes (id_artiste, image, nom, genre) FROM stdin;
1	ArticEmpire.jpg	Artic Empire	Mix
2	Ed_Sheeran.jpg	Ed Sheeran	Pop
3	Eklipse.jpg	Eklipse	Pop/Rock
4	Garou.jpg	Garou	Pop
5	Rodrigo_Gabriela.jpg	Rodrigo y Gabriela	Flamenco
6	Tal.jpg	Tal	Pop
7	AC_DC.jpg	AC-DC	Rock
\.


--
-- Data for Name: concerts; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.concerts (id_concert, date_evenement, lieu, place, place_libre, prix, description) FROM stdin;
1	2018-12-24	Paris La Défense Arena	40000	40000	150.00	Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque aliquet lorem et sapien mattis, et tempor purus rutrum. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia.
2	2018-10-27	Amphithéâtre extérieur du Zénith de Nancy	25000	25000	130.00	 Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Maecenas quis porttitor urna. Vestibulum facilisis erat et quam porttitor fringilla. Integer eget sapien vitae elit tincidunt aliquam.
3	2019-03-26	AccorHotels Aréna (POPB)	20300	20300	99.99	Nunc eu lectus ut arcu gravida vestibulum sit amet ut metus. Sed vel finibus urna. Donec est lacus, elementum non odio vitae, suscipit aliquet metus. Integer vehicula placerat dolor eget.
4	2019-09-25	Halle Tony Garnier	17000	17000	113.00	Nunc nunc lectus, scelerisque ac nisl sed, maximus vestibulum tellus. Interdum et malesuada fames ac ante ipsum primis in faucibus. Donec vestibulum tempus hendrerit. Vivamus elementum purus ac aliquam consectetur.
5	2019-01-03	Sud de France Arena	14800	14800	50.00	Sed malesuada arcu eget turpis iaculis imperdiet. Donec quis libero libero. Integer sit amet turpis malesuada, egestas purus vel, efficitur nisl. Etiam ultricies odio nec tristique scelerisque. Vestibulum eget posuere.
6	2019-05-30	Arena stade couvert de Liévin	14000	14000	50.00	Nulla venenatis sagittis sagittis. Vestibulum eget laoreet nunc, vitae fermentum est. Praesent tincidunt elementum dolor accumsan hendrerit. Vivamus justo arcu, porta in turpis a, varius tristique libero. Integer tristique quam.
7	2019-02-24	Arènes de Béziers	13100	13100	50.00	Sed dapibus felis a ante blandit maximus. Curabitur tristique felis a tellus venenatis, et mollis risus imperdiet. Suspendisse orci magna, auctor at turpis vitae, semper blandit elit. Aliquam molestie purus.
8	2019-01-10	Gayant Expo	13000	13000	79.95	Duis a ullamcorper nunc. Quisque non commodo velit. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer condimentum nulla ultricies dolor blandit pellentesque. Sed nec ex diam. Duis imperdiet finibus.
9	2018-11-27	Arènes de Nîmes	13000	13000	64.00	Aliquam erat volutpat. Sed ultrices iaculis tortor eget tempor. Curabitur convallis quis lectus id feugiat. Maecenas sem lorem, porta efficitur suscipit ut, lacinia ut ligula. Maecenas non nisl in dolor.
10	2018-11-22	Arènes d'Arles	12500	12500	49.99	Mauris ornare, enim fringilla maximus dapibus, est ipsum mollis felis, id ultricies massa nunc id libero. Vestibulum est erat, fermentum ut luctus at, feugiat non enim. Morbi porta purus nec.
11	2019-02-04	Galaxie	12200	12200	50.00	Aliquam posuere, tortor a euismod ultricies, risus dui mollis lectus, ac imperdiet justo nunc et ante. Ut suscipit mauris quam, in pellentesque dui dignissim convallis. Etiam enim diam, blandit varius.
12	2018-12-28	Zénith Strasbourg Europe	12079	12079	40.00	Pellentesque sit amet finibus justo. Vestibulum vel vehicula quam. Ut sit amet vehicula urna, et ullamcorper justo. Nulla pretium dapibus neque non gravida. Phasellus ornare venenatis lorem, eu dictum urna.
\.


--
-- Data for Name: ensemble_groupe; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.ensemble_groupe (id_concert, id_artiste) FROM stdin;
1	1
1	2
1	3
1	4
1	5
1	6
1	7
2	2
2	6
3	4
3	5
4	1
5	1
6	2
6	4
7	7
8	1
9	1
10	7
11	1
12	7
\.


--
-- Data for Name: utilisateurs; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.utilisateurs (id_utilisateur, nom, prenom, mail, mdp) FROM stdin;
1	Guerrero	Johan	johan.guerrero394@gmail.com	6bef1da66989960533e9f1a8e34560703ff2d245
2	Diez	Marie	spel7900@gmail.com	03faefdfdcb86a6ca64fbd0d0f5c1d804dfd6bc4
3	Toto	Azerty	admin@admin.fr	86f7e437faa5a7fce15d1ddcb9eaeaea377667b8
\.


--
-- Name: administrateurs_id_admin_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.administrateurs_id_admin_seq', 2, true);


--
-- Name: artistes_id_artiste_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.artistes_id_artiste_seq', 7, true);


--
-- Name: concerts_id_concert_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.concerts_id_concert_seq', 12, true);


--
-- Name: utilisateurs_id_utilisateur_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.utilisateurs_id_utilisateur_seq', 3, true);


--
-- Name: administrateurs administrateurs_id_utilisateur_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.administrateurs
    ADD CONSTRAINT administrateurs_id_utilisateur_key UNIQUE (id_utilisateur);


--
-- Name: administrateurs administrateurs_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.administrateurs
    ADD CONSTRAINT administrateurs_pkey PRIMARY KEY (id_admin);


--
-- Name: artistes artistes_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.artistes
    ADD CONSTRAINT artistes_pkey PRIMARY KEY (id_artiste);


--
-- Name: concerts concerts_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.concerts
    ADD CONSTRAINT concerts_pkey PRIMARY KEY (id_concert);


--
-- Name: ensemble_groupe ensemble_groupe_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ensemble_groupe
    ADD CONSTRAINT ensemble_groupe_pkey PRIMARY KEY (id_concert, id_artiste);


--
-- Name: utilisateurs utilisateurs_mail_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.utilisateurs
    ADD CONSTRAINT utilisateurs_mail_key UNIQUE (mail);


--
-- Name: utilisateurs utilisateurs_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.utilisateurs
    ADD CONSTRAINT utilisateurs_pkey PRIMARY KEY (id_utilisateur);


--
-- Name: administrateurs administrateurs_id_utilisateur_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.administrateurs
    ADD CONSTRAINT administrateurs_id_utilisateur_fkey FOREIGN KEY (id_utilisateur) REFERENCES public.utilisateurs(id_utilisateur);


--
-- Name: ensemble_groupe ensemble_groupe_id_artiste_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ensemble_groupe
    ADD CONSTRAINT ensemble_groupe_id_artiste_fkey FOREIGN KEY (id_artiste) REFERENCES public.artistes(id_artiste) ON DELETE CASCADE;


--
-- Name: ensemble_groupe ensemble_groupe_id_concert_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ensemble_groupe
    ADD CONSTRAINT ensemble_groupe_id_concert_fkey FOREIGN KEY (id_concert) REFERENCES public.concerts(id_concert) ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

